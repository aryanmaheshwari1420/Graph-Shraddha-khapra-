1. Topological sorting : It is a linear order of vertices such that every directed edge u->v,
                        the vertex u comes before v in the order .
                        It Shows the dependency for the next node to the node below it .

2. Topological sorting performed for the (DAG) means for directed acyclic graph only.

Topological sort is an algorithmic technique used to order the vertices of a directed acyclic graph (DAG) in such a way that for
 every directed edge (u, v), vertex u comes before vertex v in the ordering.
 In other words, it provides a linear ordering of the vertices that respects the partial order defined by the directed edges.

3.  Creating graph using ArrayList is quite effecients as compared to use with the adjacency matrix .
    because adjacency matrix contain all the information of nodes that are not connected to it also .
    while in ArrayList it contains the information only for those nodes that are directly connected to it .

4. Time complexity of creating graph using ArrayList<>() is O(x) where x denotes the no of nodes that are directly
   connected to it.  // constant time

5. Time complexity of creating graph using Adjacency matrix is O(v) where v denotes the no of all nodes . // linear time and space contain o(V^2) .

6. Sometimes 2d array is given and what we called them is that Implicit graph for finding particular things. // flood fill algo is used here .

7. BFS is also known as indirect level order traversal. // time complexity is O(V+E) .

   3 steps we have to perform to visit the node in BFS 1. print the curr node
                                                       2. vis[curr] = True
                                                       3. curr node neighbors add in queue. (only checked when if(curr_node!=true)
8. DFS time complexity is also O(V+E) .

9. Undirected approach of DFS fail in directed graph for cycle detection .

10. In directed Graph , if in recursion stack the visited node is comming again in the stack this is the condition of the cycle is present .

11. undirected graph --> DFS , BFS , DSU(Disjoint Set Union) 3 approches that are used in this to detect cycle in undirected graph.

12. Directed graph --> DFS , BFS , Topological order (kahn's algo) , graph coloring that are used in this to detect the cycle.

13. undirected me cycle ki condition tab aati hai jab ek node ko apne visit nahi kiya kissi or ne kiya lekin aap uske neighbor hai
    tab aati hai cycle detect ki undirected me.

                or
    tab pata chalta hai jab aap kissi node pr jaane chahre hai lekin vo aapka parent bhi nhi h jisse aap aaye hai so this is the
    condition for the detection of cycle.

14. Dijkstra's algorithm --> It worked on BFS , it is an greedy(laalchi) algorithm  ,generally use priority Queue

15. Bellman ford work on the dynamic programming algorithm not like dijkstra which work on greedy algo or approch.
    Bellman ford doesn't work for negative weight cycle.

16.



